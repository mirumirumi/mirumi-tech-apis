AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: functions and apis


Parameters:
  ResourcePrefix:
    Type: String
    Default: mirumitech
  EnvironmentName:
    Type: String
    AllowedValues:
      - dev
      - prd
  ApiAllowOrigin:
    Type: String
  UnHashedApiKey:
    Type: String


Conditions:
  IsPrd: !Equals [!Ref EnvironmentName, prd]


Globals:
  Function:
    MemorySize: 128
    Timeout: 30
    Environment:
      Variables:
        LOG_LEVEL: !If [IsPrd, INFO, DEBUG]
        ENV_NAME: !Sub ${EnvironmentName}
        RUST_BACKTRACE: 1
        API_ALLOW_ORIGIN: !Sub ${ApiAllowOrigin}


Resources:
  RestApis:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${ResourcePrefix}-${EnvironmentName}
      StageName: !Sub ${ResourcePrefix}-${EnvironmentName}-apis
      Cors:
        AllowOrigin: !Sub "'${ApiAllowOrigin}'"
        AllowHeaders: "'Content-Type, X-Amz-Date, Authorization, X-Api-Key, X-Amz-Security-Token'"
        AllowMethods: "'GET, POST, PUT, PATCH, DELETE, OPTIONS'"

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: authorizer
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-authorizer
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          UNHASHED_KEY: !Ref UnHashedApiKey

  HandleApisFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: handle_apis
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-handle-apis
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /{proxy+}
            Method: ANY


  PostTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub ${ResourcePrefix}-${EnvironmentName}-post
      KeySchema:
        - AttributeName: slag
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: slag
          AttributeType: S
      BillingMode: PAY_PER_REQUEST 
