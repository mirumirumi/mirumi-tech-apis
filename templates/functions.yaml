AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: functions and apis


Globals:
  Function:
    MemorySize: 128  # default
    Timeout: 13
    Layers:
      - !Ref ImportModulesLayer
      - !Ref UtilsLayer


Parameters:
  ResourcePrefix:
    Type: String
    Default: mirumitech
  EnvironmentName:
    Type: String
    AllowedValues:
      - dev
      - prd


Resources:
  RestApis:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${ResourcePrefix}-${EnvironmentName}
      StageName: !Sub ${ResourcePrefix}-${EnvironmentName}-apis
      Auth:
        ApiKeyRequired: true
  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub ${ResourcePrefix}-${EnvironmentName}-api-key
      Enabled: true
      StageKeys:
        - RestApiId: !Ref RestApis
          StageName:
            !Sub ${ResourcePrefix}-${EnvironmentName}-apis
  ApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub ${ResourcePrefix}-${EnvironmentName}-api-usage-plan
      ApiStages:
        - ApiId: !Ref RestApis
          Stage:
            !Sub ${ResourcePrefix}-${EnvironmentName}-apis
  ApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties :
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

  GetTopIndexesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-get-top-indexes
      CodeUri: ../functions/get_top_indexes
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /get-top-indexes
            Method: get
  GetPostCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-get-post-count
      CodeUri: ../functions/get_post_count
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /get-post-count
            Method: get
  GetTagIndexesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-get-tag-indexes
      CodeUri: ../functions/get_tag_indexes
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /get-tag-indexes
            Method: get
  GetAllTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-get-all-tags
      CodeUri: ../functions/get_all_tags
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /get-all-tags
            Method: get
  GetPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-get-post
      CodeUri: ../functions/get_post
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 512  # [TODO]: adjust
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /get-post
            Method: get
  SearchPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-search-post
      CodeUri: ../functions/search_post
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /search-post
            Method: get

  InsertContentWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ResourcePrefix}-${EnvironmentName}-insert-content-webhook
      CodeUri: ../functions/insert_content_webhook
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 90
      Layers:
        - !Ref InsertContentWebhookLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostTable
      Environment:
        Variables:
          POST_TABLE_NAME: !Ref PostTable
      Events:
        RestApis:
          Type: Api
          Properties:
            RestApiId: !Ref RestApis
            Path: /insert-content-webhook
            Method: post

  PostTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub ${ResourcePrefix}-${EnvironmentName}-post
      KeySchema:
        - AttributeName: slag
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: slag
          AttributeType: S
      BillingMode: PAY_PER_REQUEST 

  ImportModulesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: import modules containing PowerTools
      ContentUri: ../functions/layers/import_modules_layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: utils
      ContentUri: ../functions/layers/utils_layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
  InsertContentWebhookLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: for insert-content-webhook
      ContentUri: ../functions/layers/insert_content_webhook_layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
