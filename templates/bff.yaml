AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: backend for frontend resources


Parameters:
  ResourcePrefix:
    Type: String
    Default: mirumitech
  EnvironmentName:
    Type: String
    AllowedValues:
      - dev
      - prd


Conditions:
  IsPrd: !Equals [!Ref EnvironmentName, prd]


Resources:
  StaticHostingBucket:
    Type: AWS::S3::Bucket
    Condition: IsPrd
    Properties:
      BucketName: !Sub ${ResourcePrefix}-${EnvironmentName}-static-hosting
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html

  StaticHostingCloudFront:
    Type: AWS::CloudFront::Distribution
    Condition: IsPrd
    Properties:
      DistributionConfig:
        Aliases:
          - "mirumi.tech"
        CacheBehaviors:  # `/_nuxt/*`s
          - AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            Compress: true
            PathPattern: /_nuxt/*
            TargetOriginId: !Ref StaticHostingBucket
            ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /assets/404.html
        DefaultRootObject: index.html
        DefaultCacheBehavior:  # `index.html`s
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingDisabled
          Compress: true
          TargetOriginId: !Ref StaticHostingBucket
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !Sub ${StaticHostingBucket}.s3-website-ap-northeast-1.amazonaws.com
            Id: !Ref StaticHostingBucket
            CustomOriginConfig:  # for only s3-static-hosting
              OriginProtocolPolicy: http-only
            # S3OriginConfig:  # for only non-s3-static-hosting
            #   OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
            OriginCustomHeaders:
              - HeaderName: Referer
                HeaderValue: !GetAtt StaticHostingBucket.DomainName
        Restrictions:
          GeoRestriction: 
            RestrictionType: none
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:145943270736:certificate/cd9c6ffd-8733-403c-a856-665835f70a4d
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  StaticSiteHostingPublicReadPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: IsPrd
    Properties: 
      Bucket: !Ref StaticHostingBucket
      PolicyDocument: 
        {
          "Version": "2012-10-17",
          "Id": "StaticSiteHostingPublicReadPolicy",
          "Statement": [
            {
              "Sid": "StaticSiteHostingPublicReadPolicy",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": !Sub "arn:aws:s3:::${StaticHostingBucket}/*",
              "Condition": {
                "StringLike": {
                  "aws:Referer": [
                    !GetAtt StaticHostingBucket.DomainName
                  ]
                }
              }
            }
          ]
        }
